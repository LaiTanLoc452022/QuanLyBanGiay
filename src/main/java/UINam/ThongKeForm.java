/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UINam;

import BUS.Generic_BUS;
import static DAO.Generic_Implement.getAllChildrenFromParent;
import entity1.Chitiethoadon;
import entity1.Hoadon;
import java.awt.Color;
import java.awt.GradientPaint;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author NAM
 */
public class ThongKeForm extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeForm
     */
    public ThongKeForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tkdttheongay = new javax.swing.JButton();
        tkdttheospbanchay = new javax.swing.JButton();
        tkdttheothang = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THỐNG KÊ DOANH THU");

        tkdttheongay.setText("Thống kê theo ngày");
        tkdttheongay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tkdttheongayMouseClicked(evt);
            }
        });

        tkdttheospbanchay.setText("Thống kê theo sản phẩm bán chạy (theo tháng)");
        tkdttheospbanchay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tkdttheospbanchayMouseClicked(evt);
            }
        });

        tkdttheothang.setText("Thống kê theo tháng");
        tkdttheothang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tkdttheothangMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tkdttheothang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tkdttheospbanchay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tkdttheongay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(tkdttheongay, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tkdttheothang, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tkdttheospbanchay, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public static class Cus {

        public Date ngay;
        public Double doanhthu;
        public int soluong;

        public Cus() {
        }
    }

    public static class CusMonth {

        public int thang;
        public Double doanhthu;
        public int soluong;

        public CusMonth() {

        }
    }


    private void tkdttheothangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tkdttheothangMouseClicked
        // TODO add your handling code here:
        ArrayList<Hoadon> listhd = Generic_BUS.getAll(Hoadon.class);
        Set<Date> SetNgay = new HashSet<>(); // 
        Set<Integer> SetThang = new HashSet<>();

        for (Hoadon e : listhd) {
            SetNgay.add(e.getNgayLap());
        }

        for (Hoadon e : listhd) {
            SetThang.add(e.getNgayLap().getMonth());
        }
        // Tính tổng doanh thu của từng ngày        
        ArrayList<Cus> dtday = new ArrayList();
        for (var ngay : SetNgay) {
            double dt = 0.0d;
            // System.out.println(ngay.toString());
            for (int j = 0; j < listhd.size(); ++j) {
                if (ngay.toString().equals(listhd.get(j).getNgayLap().toString())) {
                    dt = dt + listhd.get(j).getTongTien().doubleValue();
                }
            }
            Cus custemp = new Cus();
            custemp.doanhthu = dt;
            custemp.ngay = ngay;
            dtday.add(custemp);
        }
        // Tính tổng doanh thu của từng tháng 
        ArrayList<CusMonth> month = new ArrayList(12);
        for (int itmon : SetThang) {
            double dttheothang = 0.0d;
            for (Cus doanhthutheongay : dtday) {
                if (itmon == doanhthutheongay.ngay.getMonth()) {
                    dttheothang = dttheothang + doanhthutheongay.doanhthu;
                }
            }
            CusMonth cusMonth = new CusMonth();
            cusMonth.doanhthu = dttheothang;
            cusMonth.thang = itmon + 1;
            month.add(cusMonth);
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if (month != null && !month.isEmpty()) {
            for (CusMonth m : month) {
                dataset.setValue(m.doanhthu, "Doanh thu theo tháng", Integer.toString(m.thang));
            }
        }
        // Tạo biểu đồ cột
        JFreeChart chart = ChartFactory.createBarChart("Thống kê doanh thu theo tháng", "Tháng", "Doanh Thu (VND)", dataset, PlotOrientation.VERTICAL, false, true, false);
        // Lấy đối tượng CategoryPlot từ biểu đồ
        CategoryPlot plot = chart.getCategoryPlot();
        // Thiết lập màu cho cột
        GradientPaint gp = new GradientPaint(
                0.0f, 0.0f, Color.RED,
                0.0f, 0.0f, Color.YELLOW
        );
        plot.getRenderer().setSeriesPaint(0, gp);
        // Thiết lập màu nền cho biểu đồ
        plot.setBackgroundPaint(new GradientPaint(
                0.0f, 0.0f, Color.WHITE,
                0.0f, 0.0f, Color.BLUE
        ));
        // Thiết lập màu nền cho biểu đồ cột
        plot.setRangeGridlinePaint(new Color(0, 0, 0, 0));
        // Hiển thị biểu đồ trong JFrame
        ChartFrame frame = new ChartFrame("Doanh thu", chart);
        frame.pack();
        frame.setVisible(true);
        frame.setSize(800, 600);
    }//GEN-LAST:event_tkdttheothangMouseClicked

    private void tkdttheongayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tkdttheongayMouseClicked
        // TODO add your handling code here:
        ArrayList<Hoadon> listhd = Generic_BUS.getAll(Hoadon.class);
        Set<Date> SetNgay = new HashSet<>(); // 
        Set<Integer> SetThang = new HashSet<>();

        for (Hoadon e : listhd) {
            SetNgay.add(e.getNgayLap());
        }

        for (Hoadon e : listhd) {
            SetThang.add(e.getNgayLap().getMonth());
        }
        // Tính tổng doanh thu của từng ngày        
        ArrayList<Cus> dtday = new ArrayList();
        for (var ngay : SetNgay) {
            double dt = 0.0d;
            // System.out.println(ngay.toString());
            for (int j = 0; j < listhd.size(); ++j) {
                if (ngay.toString().equals(listhd.get(j).getNgayLap().toString())) {
                    dt = dt + listhd.get(j).getTongTien().doubleValue();
                }
            }
            Cus custemp = new Cus();
            custemp.doanhthu = dt;
            custemp.ngay = ngay;
            dtday.add(custemp);
        }
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if (dtday != null && !dtday.isEmpty()) {
            for (Cus m : dtday) {
                dataset.setValue(m.doanhthu, "Doanh thu theo ngày", (m.ngay));
            }
        }
        // Tạo biểu đồ cột
        JFreeChart chart = ChartFactory.createBarChart("Thống kê doanh thu theo ngày", "Ngày", "Doanh Thu (VND)", dataset, PlotOrientation.VERTICAL, false, true, false);
        // Lấy đối tượng CategoryPlot từ biểu đồ
        CategoryPlot plot = chart.getCategoryPlot();
        // Thiết lập màu cho cột
        GradientPaint gp = new GradientPaint(
                0.0f, 0.0f, Color.RED,
                0.0f, 0.0f, Color.YELLOW
        );
        plot.getRenderer().setSeriesPaint(0, gp);
        // Thiết lập màu nền cho biểu đồ
        plot.setBackgroundPaint(new GradientPaint(
                0.0f, 0.0f, Color.WHITE,
                0.0f, 0.0f, Color.BLUE
        ));
        // Thiết lập màu nền cho biểu đồ cột
        plot.setRangeGridlinePaint(new Color(0, 0, 0, 0));
        // Hiển thị biểu đồ trong JFrame
        ChartFrame frame = new ChartFrame("Doanh thu", chart);
        frame.pack();
        frame.setVisible(true);
        frame.setSize(800, 600);
    }//GEN-LAST:event_tkdttheongayMouseClicked

    private void tkdttheospbanchayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tkdttheospbanchayMouseClicked
        // TODO add your handling code here:      
        ArrayList<Hoadon> listHD = Generic_BUS.getAll(Hoadon.class);
        Hoadon hoadon = new Hoadon();
        List<Chitiethoadon> listCTHD = getAllChildrenFromParent(Chitiethoadon.class, hoadon);
        Set<Date> SetNgay = new HashSet<>();
        Set<Integer> SetThang = new HashSet<>();

        for (Hoadon e : listHD) {
            SetNgay.add(e.getNgayLap());
        }

        for (Hoadon e : listHD) {
            SetThang.add(e.getNgayLap().getMonth());
        }
        // Tính tổng số lượng bán của từng ngày        
        ArrayList<Cus> slngay = new ArrayList();
        for (var ngay : SetNgay) {
            int sl = 0;
            for (int j = 0; j < listHD.size(); ++j) {
                if (ngay.toString().equals(listHD.get(j).getNgayLap().toString())) {
                    sl = sl + listCTHD.get(j).getId().getSoLuong();
                }
                System.out.println(sl + " ");
            }
            Cus soluongngay = new Cus();
            soluongngay.soluong = sl;
            soluongngay.ngay = ngay;
            slngay.add(soluongngay);
        }
        // Tính tổng so luong của từng tháng 
        ArrayList<CusMonth> month = new ArrayList(12);
        for (int thang : SetThang) {
            int sltheothang = 0;
            for (Cus soluongtheongay : slngay) {
                if (thang == soluongtheongay.ngay.getMonth()) {
                    sltheothang = sltheothang + soluongtheongay.soluong;
                }
            }
            CusMonth soluongthang = new CusMonth();
            soluongthang.soluong = sltheothang;
            soluongthang.thang = thang + 1;
            month.add(soluongthang);
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if (month != null && !month.isEmpty()) {
            for (CusMonth m : month) {
                dataset.setValue(m.soluong, "Sản phẩm bán chạy nhất theo tháng", Integer.toString(m.thang));
            }
        }
        // Tạo biểu đồ cột
        JFreeChart chart = ChartFactory.createBarChart("Sản phẩm bán chạy nhất theo tháng", "Tháng", "Số lượng", dataset, PlotOrientation.VERTICAL, false, true, false);
        // Lấy đối tượng CategoryPlot từ biểu đồ
        CategoryPlot plot = chart.getCategoryPlot();
        // Thiết lập màu cho cột
        GradientPaint gp = new GradientPaint(
                0.0f, 0.0f, Color.RED,
                0.0f, 0.0f, Color.YELLOW
        );
        plot.getRenderer().setSeriesPaint(0, gp);
        // Thiết lập màu nền cho biểu đồ
        plot.setBackgroundPaint(new GradientPaint(
                0.0f, 0.0f, Color.WHITE,
                0.0f, 0.0f, Color.BLUE
        ));
        // Thiết lập màu nền cho biểu đồ cột
        plot.setRangeGridlinePaint(new Color(0, 0, 0, 0));
        // Hiển thị biểu đồ trong JFrame
        ChartFrame frame = new ChartFrame("Sản phẩm bán chạy nhất theo tháng", chart);
        frame.pack();
        frame.setVisible(true);
        frame.setSize(800, 600);
    }//GEN-LAST:event_tkdttheospbanchayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton tkdttheongay;
    private javax.swing.JButton tkdttheospbanchay;
    private javax.swing.JButton tkdttheothang;
    // End of variables declaration//GEN-END:variables
}
